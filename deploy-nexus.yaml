---
- name: Install java 8 and net-tools
  hosts: nexus_server
  tasks:
    - name: Update apt package
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
    - name: Install java 8
      apt: name=openjdk-8-jre-headless
    - name: Install net-tools
      apt: name=net-tools

- name: Download and untar Nexus file
  hosts: nexus_server
  tasks:
    - name: Check nexus folder stats
      stat:
        path: /opt/nexus
      register: stat_result
    #we download using wget by using the get_url module
    - name: Downlaod Nexus
      get_url:
        url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
        dest: /opt/
        #so we save the output of the download here
      register: download_result
    #- debug: msg={{download_result}}
    - name: Untar nexus installer
      unarchive:
        #the destination path of the download is accessed on th dest attribute so we use it here
        src: "{{download_result.dest}}"
        dest: /opt/
        remote_src: yes
      when: not stat_result.stat.exists
    - name: Find nexus folder
      #nexus untarred has a name with its version so we want to rename it to just nexus, to get the name of the file we use the find module below..
      find:
        path: /opt
        pattern: "nexus-*"
        # since we have 2 files/folders with name nexus, we specify that the one we want is a directory (the other is a zip file)
        file_type: directory
      register: find_result
    - name: Rename nexus folder
      #so we get the whole file path and rename it..
      shell: mv {{find_result.files[0].path}} /opt/nexus
      when: not stat_result.stat.exists

- name: Create nexus user and group
  hosts: nexus_server
  tasks:
    #this does not just create groups, it ensures the group exists, so if it doesnt it will create
    - name: Ensure group exists
      group:
        name: nexus
        state: present
    - name: Create nexus user
      user:
        name: nexus
        group: nexus
    - name: Make nexus user owner of the nexus folder
      file:
        path: /opt/nexus
        state: directory
        owner: nexus
        group: nexus
        #so all the files and folders in the nexus folder will be owned by nexus
        recurse: yes
    - name: Make sonatype user owner of the nexus folder
      file:
        path: /opt/sonatype-work
        state: directory
        owner: nexus
        group: nexus
        #so all the files and folders in the nexus folder will be owned by nexus
        recurse: yes

- name: Start nexus with nexus user
  hosts: nexus_server
  become: True
  become_user: nexus
  tasks:
    - name: Set run_as_user nexus
      lineinfile:
        path: /opt/nexus/bin/nexus.rc
        regexp: '^#run_as_user=""'
        line: run_as_user="nexus"
    - name: Start nexus
      command: /opt/nexus/bin/nexus start

- name: Verify nexus running
  hosts: nexus_server
  tasks:
    - name: Check with ps
      shell: ps aux | grep nexus
      #we do not see the output of the above cmd so we store it in a variable
      register: app_status
      #then we display the variable using the debug module
    - debug: msg={{app_status.stdout}}
    - name: Wait one minute
      #it takes some time for nexus port to show for netstat so we wait for one minut before executing the next command
      pause:
        minutes: 1
    - name: Check with netstat
      shell: netstat -plnt
      register: app_status
      #then we display the variable using the debug module
    - debug: msg={{app_status.stdout}}
